{"version":3,"sources":["assets/Headshot-min.jpg","components/Nav/index.js","assets/Houston_Rockets.svg.png","assets/dogs.jpg","assets/minecraft.png","components/About/index.js","assets/nowPlaying.png","assets/cinequiz.jpg","components/Portfolio/index.js","components/Contact/index.js","assets/Resume.docx","components/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","src","headshot","alt","id","href","target","rel","name","map","link","onClick","setPage","About","rockets","dogs","minecraft","Portfolio","photoReturn","img","nowPlaying","cinequiz","description","tech","github","app","project","Contact","useState","email","message","formState","Resume","resume","download","App","page","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.94c2edbf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Headshot-min.17d7b039.jpg\";","import React from 'react';\nimport headshot from '../../assets/Headshot-min.jpg';\nimport { FaGithub, FaLinkedin, FaTwitter, FaEnvelope } from 'react-icons/fa';\n\nfunction Nav(props) {\n    const links = [\n        {\n            name: 'About Me',\n            id: '#about-me',\n        },\n        {\n            name: 'Portfolio',\n            id: '#portfolio',\n        },\n        {\n            name: 'Resume',\n            id: '#resume',\n        }\n    ]\n    return (\n        <nav>\n            <div className=\"imgAndName\">\n                <img src={headshot} alt=\"headshot\" className='navPhoto'/>\n                <h1 className='h1-nav'>Raymond Lopez</h1>\n                <section id=\"footer\" className='footer'>\n            <a href=\"https://github.com/raymondlopez13\" target='_blank' rel=\"noreferrer\"><FaGithub /></a>\n            <a href=\"https://www.linkedin.com/in/raymond-lopez-b8473a1ba/\" target='_blank' rel=\"noreferrer\"><FaLinkedin /></a>\n            <a href=\"https://twitter.com/Raylo1998\" target='_blank' rel=\"noreferrer\"><FaTwitter /></a>\n            <a href='mailto:raymondlopez13@yahoo.com'><FaEnvelope /></a>\n            \n        </section>\n            </div>\n            <ul className='navLinks'>\n                {links.map((link) => (\n                    <li key={link.name}>\n                        <a  className='navLink'href={link.id} id={link.id} onClick={() => (\n                            props.setPage(link.name)\n                            )\n                        }>\n                            {link.name}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    )\n}\nexport default Nav;","export default __webpack_public_path__ + \"static/media/Houston_Rockets.svg.e459998d.png\";","export default __webpack_public_path__ + \"static/media/dogs.a990e874.jpg\";","export default __webpack_public_path__ + \"static/media/minecraft.b5b91e9f.png\";","import React from 'react';\nimport rockets from '../../assets/Houston_Rockets.svg.png';\nimport dogs from '../../assets/dogs.jpg';\nimport minecraft from '../../assets/minecraft.png';\n\nfunction About() {\n    \n    return (\n        <section id=\"about\" className='about'>\n            <div className=\"about-text\">\n                <h1 className=\"aboutMeH1\">About Me!</h1>\n                <p className='aboutP'>\n                Hello Iâ€™m Raymond, a full stack web developer with a certificate in Full Stack Web Development from the University of Texas at Austin. I love to build beautiful, functional websites using MERN, SQL, HTML, and CSS. I have great time management skills and thrive in high stress situations. I can excel in a leadership role, or as a teammate because of my ability to communicate the team goals and best ways to achieve them. I would love to work for a company that is looking to help people build their dream website for their business, portfolio, or anything else that they need!\n                </p>\n            </div>\n            <div className=\"personal\">\n                <div className=\"rockets\">\n                    <img src={rockets} alt=\"rockets logo\" className=\"rocket-logo\"/>\n                    <p className='rockets-p'>I love basketball and am a huge Rockets fan!</p>\n                </div>\n                <div className=\"dogs\">\n                    <figure>\n                        <img src={dogs} alt=\"my dogs\" className=\"dog-photo\" />\n                        <figcaption>Catalina and Lilith</figcaption>\n                    </figure>\n                    <p className=\"rockets-p\">These are my two pitbulls that I have with my girlfriend! I love to spend my free time playing with them and watching them get zoomies!</p>\n                </div>\n                <div className=\"minecraft\">\n                    <img src={minecraft} alt=\"minecraft\" className=\"minecraft-photo\" />\n                    <p className=\"rockets-p\">Minecraft is my favorite game! I love to play with my friends when I can.</p>\n                </div>\n            </div>\n        </section>\n    )\n}\nexport default About;","export default __webpack_public_path__ + \"static/media/nowPlaying.e4d82e19.png\";","export default __webpack_public_path__ + \"static/media/cinequiz.13743d83.jpg\";","import React from 'react';\nimport { FaGithub, FaGlobe } from 'react-icons/fa';\nimport nowPlaying from '../../assets/nowPlaying.png';\nimport cinequiz from '../../assets/cinequiz.jpg';\n\n\nfunction Portfolio() {\n    const projects = [\n        {\n            name: 'Now Playing',\n            description: 'Now playing is a social media app that lets users see what albums their friends have been listening to. For this project I was mainly in charge of the backend. I used express for the routing and sequelize to serve data for the front end team.',\n            tech: 'Handlebars, Express, Sequelize',\n            github: 'https://github.com/drewvena/now-playing',\n            app: 'https://nowplayingapp.herokuapp.com/login',\n        },\n        {\n            name: 'Cinequiz',\n            description: 'Cinequiz is a interactive movie quiz game that tracks users scores. I mainly worked on the game functionality: when the next question would be presented, displaying the names of actors from OMDb API, and displaying high scores.',\n            tech: 'HTML, CSS, JS, OMDb API, GIPHY API',\n            github: 'https://github.com/drewvena/git-it-right',\n            app: 'https://drewvena.github.io/git-it-right/',\n        },\n        {\n            name: 'Flambot-Corp',\n            description: 'Flambot-Corp is an online shopping website that lets users create accounts and login, add items to cart, filter items, as well as checkout. For this project I was in charge of the back end. I used created models using mongoose, and used GraphQL for serving data. Stripe API was used to incorporate a checkout.',\n            tech: 'Stripe, React, IndexedDB, Express, Semanic UI, GraphQL, Apollo',\n            github: 'https://github.com/drewvena/flambot-corp',\n            app: 'https://flambot-corp.herokuapp.com/',\n        },  \n    ];\n    function photoReturn(img) {\n        switch(img) {\n            case 'Now Playing':\n                return <img src={nowPlaying} alt='Now Playing' />;\n            case 'Cinequiz':\n                return <img src={cinequiz} alt='Cinequiz' />;\n            case 'Flambot-Corp':\n                return <img src='https://user-images.githubusercontent.com/69886471/120904381-ab8fbe00-c611-11eb-86d9-97ebb506a933.png' alt='Flambot-Corp' />;\n            default:\n                return;\n        }\n    }\n    return (\n        <section id=\"projects\">\n            {projects.map((project) => (\n                <div className=\"Project\" key={project.name}>\n                    {photoReturn(project.name)}\n                    <div>\n                        <h3>{project.name}</h3>\n                        <a href={project.github} target='_blank' rel=\"noreferrer\"><FaGithub /></a>\n                        <a href={project.app} target='_blank' rel=\"noreferrer\"><FaGlobe /></a>\n                    </div>\n                    <p>{project.description}</p>\n                    <p>Technologies used: {project.tech}</p>\n                </div>\n            ))}\n        </section>\n    )\n}\nexport default Portfolio;","import React, {useState} from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nfunction Contact() {\n    const [formState, setFormState ] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    const [ errorMessage, setErrorMessage ] = useState('');\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n            if(!isValid) {\n                setErrorMessage('Your email is invalid');\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if(!e.target.value.length) {\n                setErrorMessage(`${e.target.name} is required.`);\n            } else {\n                setErrorMessage('');\n            }\n        }\n        if (!errorMessage) {\n            setFormState({ ...formState, [e.target.name]: e.target.value })\n        }\n    }\n    \n    return (\n        <div className='contact'>\n            <h1>Contact Me!</h1>\n            <h2><a href='mailto: raymondlopez13@yahoo.com'>Email!</a></h2>\n        </div>\n    )\n}\nexport default Contact;","export default __webpack_public_path__ + \"static/media/Resume.9e6151df.docx\";","import React from 'react';\nimport resume from '../../assets/Resume.docx';\n\nfunction Resume() {\n    return (\n        <div className='resume'>\n            <h4><a href={resume} download>Download my resume</a></h4>\n            <h2>Resume</h2>\n            <div className='experience'>\n                <h3>Experience</h3>\n                <div className='job'>\n                    <p>Salt Lick BBQ</p>\n                    <p>June 2015 - Current</p>\n                </div>\n                <div className='job'>\n                    <p>Chick-Fil-A</p>\n                    <p>March 2019 - June 2019</p>    \n                </div> \n            </div>\n            <div>\n                <h3>Skills</h3>\n                <div>\n                    <p>React</p>\n                    <p>Express.js</p>\n                    <p>SQL</p>\n                    <p>MongoDB</p>\n                    <p>Node</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Resume;","import React, {useState} from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\nimport Resume from './components/Resume';\nimport Footer from './components/Footer';\nfunction App() {\n  const [page, setPage] = useState('About Me');\n  function renderPage() {\n    switch(page) {\n      case 'Portfolio':\n        return <Portfolio />;\n      case 'Contact': \n        return <Contact />;\n      case 'Resume':\n        return <Resume />;\n      case 'About Me':\n        return <About />;\n      default:\n        return <About />;\n    }\n  }\n  return (\n    <div className=\"\">\n      <Nav\n        page={page}\n        setPage={setPage}\n        renderPage={renderPage}\n      />\n      {renderPage()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}