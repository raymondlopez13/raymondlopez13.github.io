{"version":3,"sources":["assets/Headshot-min.jpg","components/Nav/index.js","components/About/index.js","assets/nowPlaying.png","assets/CarWashYeah.png","assets/roster-tracker.png","components/Portfolio/index.js","assets/Resume.docx","components/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","src","headshot","alt","id","href","target","rel","onClick","setPage","About","Portfolio","photoReturn","img","nowPlaying","rosterTracker","carWashYeah","name","description","tech","github","app","map","project","Resume","resume","download","App","useState","page","renderPage","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30924f49.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Headshot-min.17d7b039.jpg\";","import React from 'react';\nimport headshot from '../../assets/Headshot-min.jpg';\nimport { FaGithub, FaLinkedin, FaTwitter, FaEnvelope } from 'react-icons/fa';\n\nfunction Nav(props) {\n\n    return (\n        <nav>\n            <div className=\"imgAndName\">\n                <img src={headshot} alt=\"headshot\" className='navPhoto animate__animated animate__rotateIn'/>\n                <h1 className='h1-nav animate__animated animate__lightSpeedInLeft'>Raymond Lopez</h1>\n        <section id=\"footer\" className='footer'>\n            <a href=\"https://github.com/raymondlopez13\" target='_blank' rel=\"noreferrer\" className='animate__animated animate__bounceIn foot1'><FaGithub /></a>\n            <a href=\"https://www.linkedin.com/in/raymond-lopez-b8473a1ba/\" target='_blank' rel=\"noreferrer\" className='animate__animated animate__bounceIn foot2'><FaLinkedin /></a>\n            <a href=\"https://twitter.com/Raylo1998\" target='_blank' rel=\"noreferrer\" className='animate__animated animate__bounceIn foot3'><FaTwitter /></a>\n            <a href='mailto:raymondlopez13@yahoo.com' className='animate__animated animate__bounceIn foot4'><FaEnvelope /></a>\n            \n        </section>\n            </div>\n            <ul className='navLinks'> \n                <li>\n                    <a  className='navLink animate__animated animate__fadeInDown'href='#about-me' id='about-me' onClick={() => {\n                        props.setPage('About Me');\n                    }}>\n                            About Me\n                    </a>\n                </li>\n                <li>\n                    <a  className='navLink animate__animated animate__fadeInDown'href='#resume' id='resume' onClick={() => (\n                            props.setPage('Resume')\n                            )\n                        }>\n                            Resume\n                    </a>\n                </li>\n                <li>\n                    <a  className='navLink animate__animated animate__fadeInDown'href='#portfolio' id='portfolio' onClick={() => (\n                            props.setPage('Portfolio')\n                            )\n                        }>\n                            Portfolio\n                    </a>\n                </li>\n                \n            </ul>\n        </nav>\n    )\n}\nexport default Nav;","import React from 'react';\nimport { FaBasketballBall, FaDog, FaGamepad } from 'react-icons/fa';\n\nfunction About() {\n    \n    return (\n        <section id=\"about\" className='about'>\n            <div className=\"about-text\">\n                <h1 className=\"aboutMeH1\">About Me!</h1>\n                <p className='aboutP'>\n                Hello Iâ€™m Raymond, a full stack web developer with a certificate in Full Stack Web Development from the University of Texas at Austin. I love to build beautiful, functional websites using MERN, SQL, HTML, and CSS. I have great time management skills and thrive in high stress situations. I can excel in a leadership role, or as a teammate because of my ability to communicate the team goals and best ways to achieve them. I would love to work for a company that is looking to help people build their dream website for their business, portfolio, or anything else that they need!\n                </p>\n            </div>\n            <div className=\"personal\">\n                <div className=\"dogs\">\n                    <FaBasketballBall className='icon'/>\n                    <p className='rockets-p'>I love basketball and am a huge Rockets fan!</p>\n                </div>\n                <div className=\"dogs\">\n                    <FaDog className='icon'/>\n                    <p className=\"rockets-p\">I love dogs, especially pitbulls! I have two of my own that love to play and sleep.</p>\n                </div>\n                <div className=\"minecraft\">\n                    <FaGamepad className='icon'/>\n                    <p className=\"rockets-p\">Minecraft is my favorite game! I love to play with my friends when I can.</p>\n                </div>\n            </div>\n        </section>\n    )\n}\nexport default About;","export default __webpack_public_path__ + \"static/media/nowPlaying.e4d82e19.png\";","export default __webpack_public_path__ + \"static/media/CarWashYeah.fb701aa4.png\";","export default __webpack_public_path__ + \"static/media/roster-tracker.67d91dd7.png\";","import React from 'react';\nimport { FaGithub, FaGlobe } from 'react-icons/fa';\nimport nowPlaying from '../../assets/nowPlaying.png';\nimport carWashYeah from '../../assets/CarWashYeah.png';\nimport rosterTracker from '../../assets/roster-tracker.png';\n\n\nfunction Portfolio() {\n    const projects = [\n        {\n            name: 'Car Wash Yeah',\n            description: 'Car Wash Yeah is a site where users can schedule appointments for a car detail. Users can choose between a detail for their car or truck, then get to set the appointment date, and time based on the availability of the Admin. Once a time is chosen, users are then asked to give their information, and pay using the PayPal API. Upon payment, they are taken to a success screen where they can go back to the home page.',\n            tech: 'React, PayPal API, MongoDB, react-calender, axios',\n            github: 'https://github.com/raymondlopez13/car-wash',\n            app: 'https://carwashyeah.herokuapp.com/',\n        }, \n        {\n            name: 'Now Playing',\n            description: 'Now playing is a social media app that lets users see what albums their friends have been listening to. For this project I was mainly in charge of the backend. I used express for the routing and sequelize to serve data for the front end team.',\n            tech: 'Handlebars, Express, Sequelize',\n            github: 'https://github.com/drewvena/now-playing',\n            app: 'https://nowplayingapp.herokuapp.com/login',\n        },\n        {\n            name: 'Roster Tracker',\n            description: 'Roster Tracker is an app that allows users to create accounts, and create different rosters once signed in. Users can create different positions for their roster, and add members to their roster with assigned positions.',\n            tech: 'Python, Django',\n            github: 'https://github.com/raymondlopez13/djagno_employee_tracker',\n            app: 'https://raymondlopez13-django-roster.herokuapp.com/',\n        },\n        {\n            name: 'Flambot-Corp',\n            description: 'Flambot-Corp is an online shopping website that lets users create accounts and login, add items to cart, filter items, as well as checkout. For this project I was in charge of the back end. I used created models using mongoose, and used GraphQL for serving data. Stripe API was used to incorporate a checkout.',\n            tech: 'Stripe, React, IndexedDB, Express, Semanic UI, GraphQL, Apollo',\n            github: 'https://github.com/drewvena/flambot-corp',\n            app: 'https://flambot-corp.herokuapp.com/',\n        },  \n    ];\n    function photoReturn(img) {\n        switch(img) {\n            case 'Now Playing':\n                return <img src={nowPlaying} alt='Now Playing' />;\n            case 'Flambot-Corp':\n                return <img src='https://user-images.githubusercontent.com/69886471/120904381-ab8fbe00-c611-11eb-86d9-97ebb506a933.png' alt='Flambot-Corp' />;\n            case 'Roster Tracker':\n                return <img src={rosterTracker} alt='Roster-Tracker' />;\n            case 'Car Wash Yeah':\n                return <img src={carWashYeah} alt='Car Wash Yeah' />;\n            default:\n                return;\n        }\n    }\n    return (\n        <section id=\"projects\">\n            {projects.map((project) => (\n                <div className=\"Project\" key={project.name}>\n                    {photoReturn(project.name)}\n                    <div>\n                        <h3>{project.name}</h3>\n                        <a href={project.github} target='_blank' rel=\"noreferrer\"><FaGithub /></a>\n                        <a href={project.app} target='_blank' rel=\"noreferrer\"><FaGlobe /></a>\n                    </div>\n                    <p>{project.description}</p>\n                    <div><h3>Technologies used:</h3> <h1 className='tech'>{project.tech}</h1></div>\n                </div>\n            ))}\n        </section>\n    )\n}\nexport default Portfolio;","export default __webpack_public_path__ + \"static/media/Resume.9e6151df.docx\";","import React from 'react';\nimport resume from '../../assets/Resume.docx';\n\nfunction Resume() {\n    return (\n        <div className='border'>\n            <h4><a href={resume} download>Download my resume</a></h4>\n            <div className='resume'>\n                <div className='flex'>\n                    <h3>Languages</h3>\n                    <div className='skills'>\n                        <p>Javascript</p>\n                        <p>Python</p>\n                    </div>\n                </div>\n                <div className='flex'>\n                    <h3>Frameworks</h3>\n                    <div className='skills'>\n                        <p>Node.js</p>\n                        <p>React.js</p>\n                        <p>Express.js</p>\n                        <p>Django</p>\n                    </div>\n                </div>\n                <div className='flex'>\n                    <h3>Databases</h3>\n                    <div className='skills'>\n                        <h3>SQL:</h3>\n                        <p>MySQL</p>\n                        <p>sqlite</p>\n                        <p>PostgreSQL</p>\n                        <h3>NoSQL:</h3>\n                        <p>MongoDB</p>\n                    </div>\n                </div>\n            </div>\n            \n            \n        </div>\n    )\n}\nexport default Resume;","import React, {useState} from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Resume from './components/Resume';\nfunction App() {\n  const [page, setPage] = useState('About Me');\n  function renderPage() {\n    switch(page) {\n      case 'Portfolio':\n        return <Portfolio />;\n      case 'Resume':\n        return <Resume />;\n      case 'About Me':\n        return <About />;\n      default:\n        return <About />;\n    }\n  }\n  return (\n    <div className=\"\">\n      <Nav\n        page={page}\n        setPage={setPage}\n        renderPage={renderPage}\n      />\n      <div className='body'>\n        <div class='main'>\n          {renderPage()}\n        </div>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'animate.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}