{"version":3,"sources":["components/Nav/index.js","components/About/index.js","components/Portfolio/projects.js","components/Portfolio/index.js","components/Resume/resume-skill-container.js","components/Resume/index.js","components/Landing/index.js","components/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","location","useLocation","useState","navOpen","setNavOpen","useEffect","console","log","pathname","click","className","onClick","to","About","Project","props","displayModal","setDisplayModal","project","images","map","image","src","alt","title","tech","technologyUsed","target","rel","href","github","liveApp","event","description","id","Portfolio","ResumeSkillContainer","skill","progress","percentage","Resume","skills","Landing","Contact","class","App","path","element","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bc4cf1ee.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { AiOutlineMenu, AiOutlineClose } from 'react-icons/ai';\n\nfunction Nav() {\n    const location = useLocation();\n    const [ navOpen, setNavOpen ] = useState(false);\n    useEffect(() => {\n        console.log(location.pathname);\n    }, [location])\n    const click = () => {\n        if(navOpen) {\n            setNavOpen(false);\n        } else {\n            setNavOpen(true);\n        }\n    }\n    return (\n        <>\n            {location.pathname === '/' ? null : (\n                <>\n                {navOpen ?\n                    <div className='nav'>\n                        <button className='close-menu-btn' onClick={click}>\n                            <AiOutlineClose/>\n                        </button>\n                        <nav className='link-container'>\n                            <h1 className='title'>Menu</h1>\n                            <Link to='about' onClick={click}><a className='link'><h1>\n                                About    \n                            </h1></a></Link>\n                            <Link to='portfolio' onClick={click}><a className='link'><h1>\n                                Portfolio    \n                            </h1></a></Link>\n                            <Link to='resume' onClick={click}><a className='link'><h1>\n                                Resume    \n                            </h1></a></Link>\n                            <Link to='contact' onClick={click}><a className='link'><h1>\n                                Contact    \n                            </h1></a></Link>\n                        </nav>\n                    </div>\n                    :\n                    <button className='menu-btn' onClick={click}>\n                        <AiOutlineMenu/>\n                    </button>\n                }\n                </>  \n            )}\n        </>\n    )\n}\nexport default Nav;","import React from 'react';\nfunction About() {\n    \n    return (\n        <div className='about'>\n            <h1>\n                About\n            </h1>\n            <h3>\n                Hello Iâ€™m Raymond, a full stack developer with a certificate in web development from the University of Texas at Austin. I'm currently looking for a full time or part time position!\n            </h3>\n        </div>\n    )\n}\nexport default About;","import React, { useState } from 'react';\r\nimport {Carousel} from 'react-responsive-carousel';\r\nimport { AiOutlineClose, AiFillGithub } from 'react-icons/ai';\r\nimport { FaGlobe } from 'react-icons/fa';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nfunction Project(props) {\r\n    const [ displayModal, setDisplayModal ] = useState([false, 0]);\r\n    const click = (event) => {\r\n        setDisplayModal([true, event.target.id]);\r\n    }\r\n    const close = (event) => {\r\n        setDisplayModal([false, 0]);\r\n    }\r\n    return (\r\n        <>\r\n            <div className='project'>\r\n                <Carousel className='carousel'>\r\n                    {props.project.images.map(image => {\r\n                        return <div className='img'>\r\n                            <img src={image} alt='Project'/>\r\n                        </div>\r\n                    })}\r\n                </Carousel>\r\n                <h1>\r\n                    {props.project.title}\r\n                </h1>\r\n                <h2>Tech used:</h2>\r\n                <div className='tech'>\r\n                    {props.project.tech.map(technologyUsed => \r\n                        <h2 className='tech-item'>{technologyUsed}</h2>\r\n                    )}\r\n                </div>\r\n                <div className='githubLiveApp underline'>\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href={props.project.github} className='GHLink'>\r\n                            <AiFillGithub />\r\n                        </a>\r\n\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href={props.project.liveApp} className='GHLink'>\r\n                            <FaGlobe />\r\n                        </a>\r\n                </div>\r\n                {displayModal[0] ?\r\n                    <div className='Modal'>\r\n                        <button onClick={close} className='close-btn'>\r\n                            <h1>X</h1>\r\n                        </button>\r\n                        <h3>\r\n                            {props.project.description}\r\n                        </h3>\r\n\r\n                    </div>\r\n                : \r\n                    <button id={props.project.id} onClick={click} className='view-btn'>\r\n                        <h3 id={props.project.id}>VIEW DESCRIPTION</h3>\r\n                    </button> \r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Project;","import React from 'react';\nimport Project from './projects';\n\n\nfunction Portfolio() {\n    const projects = [\n        {\n            title: 'Cinequiz',\n            id: 1,\n            images: [\n                'https://github.com/drewvena/git-it-right/blob/main/images/index.png?raw=true',\n                'https://github.com/drewvena/git-it-right/blob/main/images/game.png?raw=true',\n                'https://github.com/drewvena/git-it-right/blob/main/images/highscores.png?raw=true'\n                \n            ],\n            description: 'This is a movie game application that uses the OMDb API to gather information on films and grab the top 4 actors from each individual movie. The game also randomly generates the movie along with two incorrect answers. There are 4 correct answers and 2 incorrect answers The game also uses the GIPHY API to fetch gifs based on user input criteria (such as the movie name, and the actors name that the user clicks.) Highscores are saved to local storage and displayed!',\n            github: 'https://github.com/drewvena/git-it-right',\n            liveApp: 'https://drewvena.github.io/git-it-right/',\n            tech: ['HTML', 'CSS', 'Javascript']\n        },\n        {   title: 'Now Playing',\n            id: 2,\n            images: [\n                'https://user-images.githubusercontent.com/69886471/114311521-bb2cd380-9ab4-11eb-8168-ce78881d2146.png',\n                'https://user-images.githubusercontent.com/69886471/114311407-38a41400-9ab4-11eb-856b-765b1c0c1616.png',\n                'https://user-images.githubusercontent.com/69886471/114311434-5b362d00-9ab4-11eb-8810-749c951af02a.png',\n                'https://user-images.githubusercontent.com/69886471/114311442-66895880-9ab4-11eb-8fe6-e03cd0be2a70.png',\n                'https://user-images.githubusercontent.com/69886471/114311453-743ede00-9ab4-11eb-9eca-3304b1a1780e.png',\n                'https://user-images.githubusercontent.com/69886471/114311470-815bcd00-9ab4-11eb-83f6-28442e1e641c.png'\n            ],\n            description: 'A project for the University of Texas Coding Bootcamp. Now Playing is a music-focused social media app for sharing and discovering new music. Users can create posts, like posts and add comments. The home feed can be filtered based on different criteria including genre and decade. The is also a search page to find specific users or posts. This application follows the MVC paradigm in its architectural structure, using Handlebars.js as the templating language, MySQL and Sequelize ORM for the database, and the express-session npm package for authentication.',\n            github: 'https://github.com/drewvena/now-playing/tree/main',\n            liveApp: 'https://nowplayingapp.herokuapp.com/',\n            tech: ['Handlebars', 'SQL', 'Express']\n        },\n        {   title: 'Flambot-Corp',\n            id: 3,\n            images: [\n                'https://user-images.githubusercontent.com/69886471/120904381-ab8fbe00-c611-11eb-86d9-97ebb506a933.png',\n                'https://user-images.githubusercontent.com/69886471/120904390-b6e2e980-c611-11eb-9167-457f9db7a67e.png',\n                'https://user-images.githubusercontent.com/69886471/120904401-c19d7e80-c611-11eb-9ac3-618cc22ab97d.png',\n                'https://user-images.githubusercontent.com/69886471/120904405-c82bf600-c611-11eb-8324-4e2bc6f98983.png',\n                'https://user-images.githubusercontent.com/69886471/120904419-d843d580-c611-11eb-8c6b-cae06d1cb26f.png',\n                'https://user-images.githubusercontent.com/69886471/120904427-e134a700-c611-11eb-80d6-bed3ea0ce6f7.png',\n                'https://user-images.githubusercontent.com/69886471/120904659-f4944200-c612-11eb-902b-56cfe755534a.png'\n            ],\n            description: 'This is a REACT Global State application project for our full stack JavaScript development boot-camp at the University of Texas. This application is a T-shirt store where you would be able to shop for t-shirts by filtered selection, signup/Login, and checkout using Stripe online payment. GraphQL is used on the backend.',\n            github: 'https://github.com/drewvena/flambot-corp',\n            liveApp: 'https://flambot-corp.herokuapp.com/',\n            tech: ['React', 'MongoDB', 'GraphQL', 'Apollo']\n        }\n    ]\n    return (\n        <div className='portfolio'>\n            <h1>\n                Portfolio\n            </h1>\n            <div className='projects'>\n                {projects.map(project => {\n                    return <Project project={project} />\n                })}\n            </div>\n        </div>\n    );\n}\nexport default Portfolio;","import React from 'react';\r\nimport { AiOutlinePercentage } from 'react-icons/ai';\r\n\r\nfunction ResumeSkillContainer(props) {\r\n    const percentage = () => {\r\n        switch(props.progress) {\r\n            default:\r\n                break;\r\n            case 'hundred':\r\n                return <p>100%</p>\r\n            case 'threeQtr':\r\n                return <p>75%</p>\r\n            case 'half':\r\n                return <p>50%</p>\r\n            case 'qtr':\r\n                return <p>25%</p>\r\n        }\r\n    }\r\n    return (\r\n        <div className='resume-skill-container'>\r\n            <h3>\r\n                {props.skill}\r\n            </h3>\r\n            <div className='progress-bar'>\r\n                <div className={`${props.progress}-progress progress`}>\r\n                </div>\r\n            </div>\r\n            <p>{percentage()}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default ResumeSkillContainer;","import React from 'react';\nimport ResumeSkillContainer from './resume-skill-container';\n\nfunction Resume() {\n    const leftSkills = [\n        ['HTML', 'hundred'],\n        ['CSS', 'hundred'],\n        ['Javsascript', 'hundred'],\n        ['Python', 'threeQtr'],\n        ['Java', 'qtr'],\n        ['C++', 'qtr'],\n        ['SQL', 'half'],\n        ['mongoDB', 'threeQtr']\n    ]\n    const rightSkills = [\n        ['React', 'threeQtr'],\n        ['Redux', 'half'],\n        ['Express', 'threeQtr'],\n        ['Node', 'threeQtr'],\n        ['Django', 'half'],\n        ['OOP', 'qtr'],\n        ['GrahpQL', 'half'],\n        ['Git', 'threeQtr']\n    ]\n    return (\n        <section id='resume'>\n            <h1 className='resume-title'>Resume</h1>\n\n            <h2 className='resume-link underline'><a href='https://docs.google.com/document/d/1VPUYfSK6dYB3SHvoqJzdXpXWNy8Namq7OI3Guy_VD2o/edit'>Go to my resume!</a></h2>\n\n            <div className='resume-left-column'>\n                {leftSkills.map(skills => {\n                    return (\n                        <ResumeSkillContainer skill={skills[0]} progress={skills[1]} />\n                    )\n                })}\n            </div>\n\n            <div className='resume-right-column'>\n            {rightSkills.map(skills => {\n                    return (\n                        <ResumeSkillContainer skill={skills[0]} progress={skills[1]} />\n                    )\n                })}\n            </div>\n        </section>\n    )\n}\nexport default Resume;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nfunction Landing() {\r\n    \r\n    return (\r\n        <div className='container'>\r\n            <div className='top-left'>\r\n                <img src='images/headshot.jpg' alt='Headshot'/>\r\n                <h1>Raymond Lopez</h1>\r\n            </div>\r\n            <div className='bottom-right'>\r\n                <h1>Menu</h1>\r\n                <h2><Link to='about'>About</Link></h2>\r\n                <h2><Link to='portfolio'>Portfolio</Link></h2>\r\n                <h2><Link to='resume'>Resume</Link></h2>\r\n                <h2><Link to='contact'>Contact</Link></h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Landing;","import React, { useEffect } from 'react';\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div className='contact'>\r\n            <h1>\r\n                Contact\r\n            </h1>\r\n            <a href='https://www.linkedin.com/in/raymond-lopez-b8473a1ba/' target='_blank'><h2 class='underline'>LinkedIn</h2></a>\r\n            <h2>Email:</h2>\r\n            <a href='mailto:donraylo13@gmail.com'><h3 className='underline'>donraylo13@gmail.com</h3></a>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React, { useEffect } from 'react';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Resume from './components/Resume';\nimport Landing from './components/Landing';\nimport Contact from './components/Contact';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Routes>\n        <Route path='/' element={<Landing />} />\n        <Route path='/about' element={<About />} />\n        <Route path='/contact' element={<Contact />} />\n        <Route path='/resume' element={<Resume />} />\n        <Route path='/portfolio' element={<Portfolio />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './nav.css';\nimport './about.css';\nimport './portfolio.css';\nimport './landing.css';\nimport './contact.css';\nimport './resume.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}